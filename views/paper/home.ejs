<!DOCTYPE html>
<html>

<head>
    <% include ../partials/header.ejs%>
        <link href="/css/common.css" rel="stylesheet" />
        <link href="/css/project/common.css" rel="stylesheet" />
        <link href="/css/start.css" rel="stylesheet" />
        <link href="/css/icons.css" rel="stylesheet" />
        <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet" />
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
        <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
</head>

<body>
  <h1>Welcome to Paper Games <%=user.givenName%>!</h1>

  <h3>Paper Football</h3>
  <div id = "users">
  </div>

  <!--Offense determines speed & angle of ball--->
  <!--Defense determines the offset (equivalent of wind in a lot of these games)-->

  <center><canvas onmousemove="directionalKick(event)" id = "field"></canvas></center>

    <% include ../partials/footer.ejs%>
</body>

<script src="https://cdn.socket.io/socket.io-1.7.0.js"></script>
<script>
  const socket = io();
  const max = 40;//will adjust
  let canvas, ctx, x, y, direction;//direction 1 or -1
  $(document).ready(()=>{
    socket.emit('arrival', '<%=user.email%>');
  })
  socket.on('arrive', function(email){
    console.log("hit", email);
    $('#users').append($('<li>').text(email));
    canvas = document.getElementById('field');
    //build the field, build the ball, build the interface
    //build offense, then defense
    $("#field").css("background-color", 'green');
    ctx = canvas.getContext('2d');
    canvas.width  = 1200;
    canvas.height = 500;
    x = 550;
    y = 150;
    direction = 1;
    drawField();
    drawBall();
    //how is the game going to be handled backend? >> Hit event & Defense event
  });

function directionalKick(event){
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    drawField();
    drawBall();
    const CONSTRAINT = 200;
    ctx.beginPath();
    ctx.moveTo(x, y + 35);
    let offsetX = 7;
    let offsetY = 141;
    let eventX = event.clientX - offsetX;
    let eventY = event.clientY - offsetY;

    let angle = eventX/eventY;
    let length = Math.sqrt((eventX-x) * (eventX-x) + (eventY-y) * (eventY-y));
    let i = 0;
    while(length > CONSTRAINT && i < 50){
      i++;
      console.log(length);
      //calculate y = mx+b
      let m = (eventY - y)/(eventX - x);
      let b = y - m;
      let dx = (m > 0) ? (-1) : (1);
      eventY += (m + b);
      eventX += dx;
      length = Math.sqrt((eventX-x) * (eventX-x) + (eventY-y) * (eventY-y));
    }
    console.log("angle ",angle,"\n length ",length,"\n eventX ",eventX, "\n eventY ",eventY);
    ctx.lineTo(eventX, eventY);
    ctx.closePath();
    ctx.lineWidth = 3;
    ctx.strokeStyle = "#d05050";
    ctx.stroke();
}

function drawBall(){
  //ball
      ctx.beginPath();
      let angle = 15;//in degrees
      //we'll adjust for angle later
      ctx.moveTo(x, y);
      ctx.lineTo(x, 80+y);
      ctx.lineTo(direction*45+x, 37+y);
      ctx.closePath();
      ctx.lineWidth = 10;
      ctx.strokeStyle = '#a7863b';
      ctx.stroke();
      ctx.fillStyle = "#FFCC00";
      ctx.fill();
}

function drawField(){
  //field
      ctx.beginPath();
      ctx.moveTo(100,20);
      ctx.lineTo(1100, 20);
      ctx.lineTo(1100, 480);
      ctx.lineTo(100, 480);
      ctx.closePath();
      ctx.lineWidth = 10;
      ctx.strokeStyle = "#ffffff";
      ctx.stroke();
}

</script>

</html>
